<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Partitioning on istj.dev</title><link>https://istj.dev/tags/partitioning/</link><description>Recent content in Partitioning on istj.dev</description><generator>Hugo 0.125.0</generator><language>en-us</language><copyright>Â© 2025 by istj.dev. All rights reserved.</copyright><lastBuildDate>Tue, 29 Apr 2025 07:16:22 +0700</lastBuildDate><atom:link href="https://istj.dev/tags/partitioning/index.xml" rel="self" type="application/rss+xml"/><item><title>PostgreSQL Partitioning: Native vs Inheritance + Trigger</title><link>https://istj.dev/posts/postgresql-partitioning-native-vs-inheritance-trigger/</link><pubDate>Tue, 29 Apr 2025 07:16:22 +0700</pubDate><guid>https://istj.dev/posts/postgresql-partitioning-native-vs-inheritance-trigger/</guid><description>Partitioning is a powerful technique in PostgreSQL for managing large datasets. It can significantly enhance query performance, data management, and scalability.
But which method should you choose: Native Partitioning or the older Inheritance + Trigger approach?
This article will analyze both techniques, compare their mechanisms, pros and cons, and practical applications to help you make an informed decision.
What is Partitioning and Why is it Important? Partitioning is the process of dividing a large table into smaller, more manageable pieces called partitions.</description></item></channel></rss>